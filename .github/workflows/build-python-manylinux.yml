name: Python CI Manylinux

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ] 

jobs:
  build-manylinux:
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        # If your submodules are configured to use SSH instead of HTTPS please uncomment the following line
        # git config --global url."https://github.com/".insteadOf "git@github.com:"
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
      
    # Set up python
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    # Install dependencies
    - name: Install dependencies
      run: python -m pip install --upgrade twine
      
    - name: Build manylinux Python wheels
      uses: digitalillusions/python-wheels-manylinux-build@master
      with:
        python-versions: 'cp36-cp36m cp37-cp37m'
        build-requirements: ''
        system-packages: 'cmake3 libXrandr-devel libXinerama-devel libXcursor-devel libXi-devel'
        package-path: ''
        pip-wheel-args: '--manylinux-build'
    
    - name: Publish wheels to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload wheelhouse/*-manylinux*.whl --skip-existing
