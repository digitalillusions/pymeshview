# This is a basic workflow to help you get started with Actions

name: Python CI Manylinux

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        # If your submodules are configured to use SSH instead of HTTPS please uncomment the following line
        # git config --global url."https://github.com/".insteadOf "git@github.com:"
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

    - name: Run Ls and Pwd
      run: pwd && ls -al

    # Set up python
    - name: Python wheels manylinux build
      uses: RalfG/python-wheels-manylinux-build@v0.2.2
      with:
        python-versions: 'cp36-cp36m cp37-cp37m'
        build-requirements: ''
        # system-packages: 'libxrandr-devel libxinerama-devel libxcursor-devel libxi-devel libgl-devel'
        system-packages: 'cmake3'
        package-path: 'pymeshview'
        pip-wheel-args: '--manylinux-build'


    # Upload artifacts
    - name: Upload compiled wheel as artifact
      uses: actions/upload-artifact@master
      with:
        name: pymeshview-manylinux
        path: wheelhouse/*-manylinux*.whl
      if: always()

    # Upload wheel to pypi
    # - name: Upload wheel to pypi
    #   env:
    #     TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
    #     TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    #   run: twine upload wheelhouse/*-manylinux*.whl
